{
  "_args": [
    [
      {
        "raw": "react-native-bootstrap-styles",
        "scope": null,
        "escapedName": "react-native-bootstrap-styles",
        "name": "react-native-bootstrap-styles",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\Users\\User\\helloworld"
    ]
  ],
  "_from": "react-native-bootstrap-styles",
  "_hasShrinkwrap": false,
  "_id": "react-native-bootstrap-styles@0.0.9",
  "_location": "/react-native-bootstrap-styles",
  "_nodeVersion": "9.10.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-native-bootstrap-styles_0.0.9_1547963586283_0.057686419865460525"
  },
  "_npmUser": {
    "name": "sigent",
    "email": "savva.belloff@gmail.com"
  },
  "_npmVersion": "5.8.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-native-bootstrap-styles",
    "scope": null,
    "escapedName": "react-native-bootstrap-styles",
    "name": "react-native-bootstrap-styles",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/react-native-bootstrap-styles/-/react-native-bootstrap-styles-0.0.9.tgz",
  "_shasum": "7136006fafff93fb1b8834612dcb3745eaec8b69",
  "_shrinkwrap": null,
  "_spec": "react-native-bootstrap-styles",
  "_where": "C:\\Users\\User\\helloworld",
  "author": {
    "name": "Andrei Vassin",
    "email": "savva.belloff@gmail.com",
    "url": "aka Savva Belloff"
  },
  "bugs": {
    "url": "https://github.com/savvaoff/react-native-bootstrap-styles/issues"
  },
  "dependencies": {
    "color": "^3.0.0"
  },
  "description": "Bootstrap style library for React Native",
  "devDependencies": {
    "babel-eslint": "^8.2.2",
    "babel-plugin-transform-class-properties": "^6.24.1",
    "babel-preset-env": "^1.7.0",
    "babel-register": "^6.26.0",
    "eslint": "^4.19.1",
    "eslint-config-airbnb": "^16.1.0",
    "eslint-plugin-import": "^2.10.0",
    "eslint-plugin-jsx-a11y": "^6.0.3",
    "eslint-plugin-react": "^7.7.0",
    "pre-commit": "^1.2.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-DTmqYaWweeCVSCMphaTHCqp6BSnVIhKL1rksu93kK4YeL+SF9dgJ35wjKcgaUL7JPnTHrzd262ty1PQWFK/0LQ==",
    "shasum": "7136006fafff93fb1b8834612dcb3745eaec8b69",
    "tarball": "https://registry.npmjs.org/react-native-bootstrap-styles/-/react-native-bootstrap-styles-0.0.9.tgz",
    "fileCount": 28,
    "unpackedSize": 60780,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcRAzECRA9TVsSAnZWagAA6hgP/1v6twhEQja/uJaZdd72\nZPn/1wrI+sSbvQWRAZ+1GkF91rqMwu0s2iQ/IC9X8C+ZQmZv3KWVHRMPlhuY\nX/i2BjUlUjy+mq1qH+FrnBfLm8zupIEEdHGFHb7dvDxOgfUFmmYOHaJ1xK8/\nKYM8pnGf+NG13UOS7+t2XeodfceihY7he3AAlQo1vYzx382w5AL5KB8HqJ9P\nDFB2K5Dq+p2tStMZMCG/jq36jddeV2BSVcyH/9MTFga8zFdOU8ApxPI8MDIX\nLq69QunrAHi7jDFmPcRKyuvxJrjXSWT70lX596qm/GlgAsM8D4H1XnNeJ5oH\n1j3J4Sb3qw1/BaGN6ulDsJhjEulsssvQpB8Xs9b7C23DY1T9TE+/rI4UuwN/\nnjYyj31pvTR29cy6re+gngGLNNjz9TvubWBhDXFFp56c3kzH7Qa7qLtQss60\nTrcF87Nnwycd6Tye1LJEEynJlM8BL4au76d+2e4godT48yHkhd3qJLzjyNIJ\nbgdwsoDukmcom7+sa6hr7u7dWjHlOdhIpyTB//+1WY7IpAqgDLn9eIKxQqWr\nC6KIOoQyIJvJbkcmUWkm3RceqYmdjG0JirIVfGAHdhjAEIGnoct5zIUefhHD\nYoK4itSK7Ds0hYIOE1+TQXSgUvXQ76HFHKrKrwofd8zNvXgCKoKAJHrGNPT2\n/4DS\r\n=ZNEr\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "075d4425cc34b2ee10e7c5704f7b0a5f247910b0",
  "homepage": "https://github.com/savvaoff/react-native-bootstrap-styles#readme",
  "keywords": [
    "react-component",
    "react-native",
    "bootstrap",
    "bootstrap4",
    "style",
    "responsive",
    "scale",
    "component",
    "flex",
    "grid",
    "modal",
    "form",
    "button"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "sigent",
      "email": "savva.belloff@gmail.com"
    }
  ],
  "name": "react-native-bootstrap-styles",
  "optionalDependencies": {},
  "pre-commit": {
    "run": [],
    "silent": false
  },
  "readme": "# react-native-bootstrap-styles\nBootstrap style library for React Native  \n\nOriginal class names are transformed from \"dashed\" to \"camelcase\" style, for example: `text-center` to `textCenter` and `my-sm-4` to 'mySm4'. Also all the constants (variables in terms of Bootstrap) could be accessible in templates. It helps to make custom tweaks preserving styling guidelines, for example: {fontSize: 10 * FONT_SIZE_BASE}.\n\n\n```\nimport React, { Component } from 'react';\nimport { View, Text } from 'react-native';\nimport BootstrapStyleSheet from 'react-native-bootstrap-styles';\n\nconst\n  BODY_COLOR = '#000022',\n  TEXT_MUTED = '#888888';\n\n// custom constants\nconst constants = {\n  BODY_COLOR, TEXT_MUTED,\n};\n\n// custom classes\nconst classes = {\n  title: {\n    color: 'red',\n  }\n};\n\nconst bootstrapStyleSheet = new BootstrapStyleSheet(constants, classes);\nconst s = styles = bootstrapStyleSheet.create();\nconst c = constants = bootstrapStyleSheet.constants;\n\nclass Hello extends Component {\n\n  render() {\n    return (\n      <View style={[s.body]}>\n        <View style={[s.container, s.h100, s.justifyContentCenter]}>\n          <Text style={[s.text, s.h3, s.textPrimary, s.myXs1, s.myMd3]}>Hello world!</Text>\n          <Text style={[s.text, s.py3, {fontSize: 5 * c.REM}]}>ðŸ¤“ðŸš€ðŸš€ðŸš€</Text>\n        </View>\n      </View>\n    );\n  }\n}\n```\n\nCheck the full list of constants in the source code:  \n[./src/constants.js](./src/constants.js)\n\n\n\n## Buttons\n\n\nTouchableHighlight as button:\n```\n<TouchableHighlight onPress={this.onPress} style=[{s.btnTouchable}]>\n  <View style={[s.btn, s.btnPrimary]}>\n    <Text style={[s.btnText, s.btnTextPrimary]}>Signup</Text>\n  </View>\n</TouchableHighlight>\n```\n\nLinks as default and outline buttons with some optional tweaks (see \"underlayColor\"):\n```\n// import { Link } from 'react-router-native';\n<Link to=\"/submit\" component={TouchableHighlight} underlayColor={c.PRIMARY} style={[s.btnTouchable]}>\n  <View style={[s.btn, s.btnPrimary]}>\n    <Text style={[s.btnText, s.btnTextPrimary]}>Submit</Text>\n  </View>\n</Link>\n\n<Link to=\"/cancel\" component={TouchableHighlight} underlayColor={c.PRIMARY} style={[s.btnTouchable, s.mt3]}>\n  <View style={[s.btn, s.btnOutlinePrimary]}>\n    <Text style={[s.btnText, s.textPrimary]}>Cancel</Text>\n  </View>\n</Link>\n```\n\n\n\n## Card\n\nBasic card:\n```\n<View style={[s.card]}>\n  <View style={[s.cardBody]}>\n    <Text style={[s.text]}>Hello Card!</Text>\n  </View>\n</View>\n```\n\n\n\n## Modal\n\nBasic modal (temporal approach, till higher level component added to the lib):\n```\n<Modal\n  animationType={animationType}\n  transparent={transparent}\n  visible={this.state.modal}\n  onRequestClose={this.hide}\n  onShow={this.onShown}\n  onDismiss={this.onHidden}\n>\n  <View style={[s.modal]}>\n    <View style={[s.modalDialog]}>\n      <View style={[s.modalContent]}>\n        <Text style={[s.text]>Hello Modal!</Text>\n      </View>\n    </View>\n  </View>\n</Modal>\n```\n\n\n\n## Progress bar\n\nBasic progress bar\n```\n<View style={[s.progress]}>\n  <View style={[s.progressBar, {width: `${progress * 100}%`}]} />\n</View>\n```\n\n\n\n## Custom\n\nflex{screen} aka flex{screen}1  \n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/savvaoff/react-native-swiper.git"
  },
  "scripts": {
    "lint": "eslint . --ext .js,.jsx",
    "lint-fix": "eslint . --ext .js,.jsx --fix",
    "start": "react-native start",
    "test": "npm run lint"
  },
  "version": "0.0.9"
}
